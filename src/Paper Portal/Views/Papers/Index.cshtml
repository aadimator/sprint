@model IEnumerable<Paper_Portal.Models.Paper>
@using Paper_Portal.Helpers
@{
    ViewData["Title"] = "Papers";
}

<h2>@ViewData["Title"]</h2>
@if ((string)ViewData["StatusMessage"] != "")
{
    <div class="alert alert-info alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @ViewData["StatusMessage"]
    </div>
}

@if (User.IsInRole(RoleHelper.Teacher))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-controller="Papers" asp-action="Done" method="post" class="form-horizontal" role="form">
    @if (User.IsInRole(RoleHelper.Printer))
    {
        <div class="form-group">

            <input type="checkbox" class="checkbox-inline" id="toggleAll" /><span class="text-info"> Check All </span>

            <button class="btn btn-default pull-right" type="submit">Done</button>
        </div>
    }
    <table class="table">
        <tr>
            @if (User.IsInRole(RoleHelper.Printer))
            {
                <th>
                    @Html.Raw("Done")
                </th>
            }
            <th>
                @Html.Raw("Downloaded")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Copies)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Instructor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Uploader.Department.Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                @if (User.IsInRole(RoleHelper.Printer))
                {
                    <td>
                        <input type="checkbox" name="completed" value="@item.PaperId" />
                    </td>
                }
                <td>
                    @if (item.DownloadsNum >= 1)
                {
                        @Html.Raw("&#10004;")
                    }
                    else {
                        @Html.Raw("&#10008;")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Copies)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Instructor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Uploader.Department.Name)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.PaperId">Details</a> |
                    @if (User.IsInRole(RoleHelper.Printer))
                {
                        <a asp-action="Download" asp-route-id="@item.PaperId">Download</a> @:|

                    }
                    @if (User.IsInRole(RoleHelper.Teacher))
                {
                        <a asp-action="Edit" asp-route-id="@item.PaperId">Edit</a> @:|
                        <a asp-action="Delete" asp-route-id="@item.PaperId">Delete</a>
                    }
                </td>

            </tr>
        }
    </table>
</form>


@section Scripts {
    <script>
        function toggleChecked(status) {
            $(".table input[name=selected]").each(function () {
                // Set the checked status of each to match the
                // checked status of the check all checkbox:
                $(this).prop("checked", status);
            });
        }

        $(document).ready(function () {

            // Grab a reference to the check all box:
            var checkAllBox = $("#toggleAll");

            //Set the default value of the global checkbox to true:
            checkAllBox.prop('checked', false);

            // Attach the call to toggleChecked to the
            // click event of the global checkbox:
            checkAllBox.click(function () {
                var status = checkAllBox.prop('checked');
                toggleChecked(status);
            });
        });
    </script>
}
